/**
 * 
 */
package org.lenzi.fstore.core.web.controller;

import org.lenzi.fstore.core.stereotype.InjectLogger;
import org.lenzi.fstore.web.controller.AbstractSpringController;
import org.slf4j.Logger;
import org.springframework.security.web.csrf.CsrfToken;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * Fetch CSRF token generated by Spring Security.
 * 
 * @author sal
 */
@Controller
@RequestMapping("/core/csrf")
public class CsrfController extends AbstractSpringController {

	@InjectLogger
	private Logger logger;
	
	public CsrfController() {

	}
	
	@ResponseBody
	@RequestMapping(method = { RequestMethod.GET } )
	public String csrf(CsrfToken token) {
		
		logger.info(CsrfController.class.getName() + ".csrf(...) Requesting CSRF token.");
		
		boolean haveToken = token != null ? true : false;
		
		logger.info("Have token => " + haveToken);
		if(haveToken){
			
			logger.info("Token => " + token.getToken());
			logger.info("Header Name => " + token.getHeaderName());
			logger.info("Param Name => " + token.getParameterName());
			
		}
		
		return token.getToken();
	}	

}
