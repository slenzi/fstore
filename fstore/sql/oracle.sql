/**
 * Oracle scripts
 * 
 * Get length of lob:
 * select dbms_lob.getlength(f.file_data) from fs_cms_file f
 */

/*ALTER TABLE FS_FILE_RESOURCE DROP CONSTRAINT FK_FS_FILE_RESOURCE;*/
ALTER TABLE FS_FILE_META_RESOURCE DROP CONSTRAINT FK_FS_FILE_META_RESOURCE;
ALTER TABLE FS_DIRECTORY_RESOURCE DROP CONSTRAINT FK_FS_DIRECTORY_RESOURCE;
ALTER TABLE FS_PATH_RESOURCE DROP CONSTRAINT FK_FS_PATH_RESOURCE;

drop sequence FS_NODE_ID_SEQUENCE;
drop sequence FS_LINK_ID_SEQUENCE;
drop sequence FS_PRUNE_ID_SEQUENCE;
drop sequence FS_TREE_ID_SEQUENCE;

drop sequence FS_FILE_ID_SEQUENCE;
drop sequence FS_STORE_ID_SEQUENCE;

drop sequence FS_CMS_SITE_ID_SEQUENCE;

drop sequence FS_USER_ID_SEQUENCE
drop sequence FS_USER_GROUP_ID_SEQUENCE
drop sequence FS_USER_ROLE_ID_SEQUENCE

drop index fs_parent_depth_child_idx;
drop index fs_child_parent_depth_idx;

drop table FS_NODE;
drop table FS_CLOSURE;
drop table FS_PRUNE;
drop table FS_TREE;

drop table FS_TEST_NODE;

drop table FS_FILE_RESOURCE;
drop table FS_FILE_META_RESOURCE;
drop table FS_DIRECTORY_RESOURCE;
drop table FS_PATH_RESOURCE;
drop table FS_RESOURCE_STORE;

drop table FS_CMS_SITE;

drop table FS_USER
drop table FS_USER_GROUP
drop table FS_USER_ROLE
drop table FS_USER_ROLE_LINK
drop table FS_USER_GROUP_LINK

/**
 * core tables
 */
create table FS_NODE ( 
	NODE_ID NUMBER(15,0) NOT NULL, 
	PARENT_NODE_ID NUMBER(15,0) NOT NULL, 
	/*NODE_TYPE VARCHAR2(100) NOT NULL,*/
	NAME VARCHAR2(250) NOT NULL, 
	CREATION_DATE date NOT NULL, 
	UPDATED_DATE date NOT NULL, 
	PRIMARY KEY (NODE_ID) 
);
create table FS_CLOSURE ( 
	LINK_ID NUMBER(15,0) NOT NULL, 
	PARENT_NODE_ID NUMBER(15,0) NOT NULL, 
	CHILD_NODE_ID NUMBER(15,0) NOT NULL, 
	DEPTH NUMBER(5,0) NOT NULL, 
	PRIMARY KEY (LINK_ID) 
);
create table FS_PRUNE ( 
	PRUNE_ID NUMBER(15,0) NOT NULL, 
	NODE_ID NUMBER(15,0) NOT NULL, 
	PRIMARY KEY (PRUNE_ID,NODE_ID) 
);	
create table FS_TREE ( 
	TREE_ID NUMBER(15,0) NOT NULL, 
	ROOT_NODE_ID NUMBER(15,0) NOT NULL, 
	NAME VARCHAR2(250) NOT NULL, 
	DESCRIPTION VARCHAR2(2000), 
	CREATION_DATE date NOT NULL, 
	UPDATED_DATE date NOT NULL, 
	PRIMARY KEY (TREE_ID) 
);
create table FS_USER ( 
	USER_ID NUMBER(15,0) NOT NULL,
	USERNAME VARCHAR2(20) NOT NULL,
	PASSWORD VARCHAR2(20) NOT NULL,
	FIRST_NAME VARCHAR2(40) NOT NULL,
	MIDDLE_NAME VARCHAR2(40) NOT NULL,
	LAST_NAME VARCHAR2(40) NOT NULL,
	PRIMARY_EMAIL VARCHAR2(256) NOT NULL,
	PRIMARY KEY (USER_ID) 
);
create table FS_USER_GROUP ( 
	GROUP_ID NUMBER(15,0) NOT NULL,
	GROUP_CODE VARCHAR2(250) NOT NULL,
	GROUP_DESC VARCHAR2(2000) NOT NULL,
	PRIMARY KEY (GROUP_ID) 
);
create table FS_USER_ROLE ( 
	ROLE_ID NUMBER(15,0) NOT NULL,
	ROLE_CODE VARCHAR2(250) NOT NULL,
	ROLE_DESC VARCHAR2(2000) NOT NULL,
	PRIMARY KEY (ROLE_ID) 
);
create table FS_USER_ROLE_LINK ( 
	USER_ID NUMBER(15,0) NOT NULL,
	ROLE_ID NUMBER(15,0) NOT NULL,
	PRIMARY KEY (USER_ID,ROLE_ID) 
);
create table FS_USER_GROUP_LINK ( 
	USER_ID NUMBER(15,0) NOT NULL,
	GROUP_ID NUMBER(15,0) NOT NULL,
	PRIMARY KEY (USER_ID,GROUP_ID) 
);

/**
 * test table
 */
create table FS_TEST_NODE ( 
	NODE_ID NUMBER(15,0) NOT NULL, 
	TEST_VALUE VARCHAR2(250), 
	PRIMARY KEY (NODE_ID) 
);

/**
 * File 2 tables
 */
create table FS_PATH_RESOURCE ( 
	NODE_ID NUMBER(15,0) NOT NULL,
	STORE_ID NUMBER(15,0) NOT NULL,
	NAME VARCHAR2(250) NOT NULL,
	PATH_TYPE VARCHAR2(250) NOT NULL,
	RELATIVE_PATH VARCHAR2(250) NOT NULL,
	PRIMARY KEY (NODE_ID) 
);
create table FS_FILE_META_RESOURCE ( 
	NODE_ID NUMBER(15,0) NOT NULL, 
	FILE_SIZE NUMBER(15,0) NOT NULL,
	MIME_TYPE VARCHAR2(100),
	IS_FILE_DATA_IN_DB CHAR(1) default 'Y',
	PRIMARY KEY (NODE_ID) 
);
create table FS_FILE_RESOURCE ( 
	NODE_ID NUMBER(15,0) NOT NULL,
	FILE_DATA BLOB NOT NULL,
	PRIMARY KEY (NODE_ID) 
);
create table FS_DIRECTORY_RESOURCE ( 
	NODE_ID NUMBER(15,0) NOT NULL,
	PRIMARY KEY (NODE_ID)
);
create table FS_RESOURCE_STORE ( 
	STORE_ID NUMBER(15,0) NOT NULL,
	STORE_NAME VARCHAR2(250) NOT NULL,
	STORE_DESCRIPTION VARCHAR2(4000) NOT NULL,
	STORE_PATH VARCHAR2(2000) NOT NULL,
	NODE_ID NUMBER(15,0) NOT NULL,
	MAX_FILE_SIZE_IN_DB NUMBER(15,0) DEFAULT 26214400 NOT NULL,
	CREATION_DATE date NOT NULL, 
	UPDATED_DATE date NOT NULL, 	
	PRIMARY KEY (STORE_ID) 
);

/**
 * CMS Tables
 */
create table FS_CMS_SITE ( 
	SITE_ID NUMBER(15,0) NOT NULL,
	SITE_NAME VARCHAR2(250) NOT NULL,
	SITE_DESCRIPTION VARCHAR2(4000) NOT NULL,
	OFFLINE_STORE_ID NUMBER(15,0) NOT NULL,
	ONLINE_STORE_ID NUMBER(15,0) NOT NULL,
	CREATION_DATE date NOT NULL, 
	UPDATED_DATE date NOT NULL, 	
	PRIMARY KEY (SITE_ID) 
);

/**
 * File 2 Constraints
 */
/*
ALTER TABLE FS_FILE_RESOURCE ADD CONSTRAINT FK_FS_FILE_RESOURCE
  FOREIGN KEY (NODE_ID)
  REFERENCES FS_FILE_META_RESOURCE(NODE_ID);
*/
  
ALTER TABLE FS_FILE_META_RESOURCE ADD CONSTRAINT FK_FS_FILE_META_RESOURCE
  FOREIGN KEY (NODE_ID)
  REFERENCES FS_PATH_RESOURCE(NODE_ID);
  
ALTER TABLE FS_DIRECTORY_RESOURCE ADD CONSTRAINT FK_FS_DIRECTORY_RESOURCE
  FOREIGN KEY (NODE_ID)
  REFERENCES FS_PATH_RESOURCE(NODE_ID);
  
ALTER TABLE FS_PATH_RESOURCE ADD CONSTRAINT FK_FS_PATH_RESOURCE
  FOREIGN KEY (NODE_ID)
  REFERENCES FS_NODE(NODE_ID);

/**
 * Core Indexes
 */
create unique index fs_parent_depth_child_idx on fs_closure(parent_node_id,depth,child_node_id);
create unique index fs_child_parent_depth_idx on fs_closure(child_node_id,parent_node_id,depth);	

/**
 * Core Sequences
 */
CREATE SEQUENCE FS_NODE_ID_SEQUENCE  
MINVALUE 1 
MAXVALUE 999999999999999999999999999  
INCREMENT BY 1 
START WITH 1 
CACHE 10  
ORDER  
NOCYCLE;

CREATE SEQUENCE FS_LINK_ID_SEQUENCE  
MINVALUE 1 
MAXVALUE 999999999999999999999999999  
INCREMENT BY 1 
START WITH 1 
CACHE 10  
ORDER  
NOCYCLE;

CREATE SEQUENCE FS_PRUNE_ID_SEQUENCE  
MINVALUE 1 
MAXVALUE 999999999999999999999999999  
INCREMENT BY 1 
START WITH 1 
CACHE 10  
ORDER  
NOCYCLE;

CREATE SEQUENCE FS_TREE_ID_SEQUENCE  
MINVALUE 1 
MAXVALUE 999999999999999999999999999  
INCREMENT BY 1 
START WITH 1 
CACHE 10  
ORDER  
NOCYCLE;

/* start with 2. default row is 1 for admin account. */
CREATE SEQUENCE FS_USER_ID_SEQUENCE  
MINVALUE 1 
MAXVALUE 999999999999999999999999999  
INCREMENT BY 1 
START WITH 2 
CACHE 10  
ORDER  
NOCYCLE;

CREATE SEQUENCE FS_USER_GROUP_ID_SEQUENCE  
MINVALUE 1 
MAXVALUE 999999999999999999999999999  
INCREMENT BY 1 
START WITH 1 
CACHE 10  
ORDER  
NOCYCLE;

/* start with 7 to account for default data */
CREATE SEQUENCE FS_USER_ROLE_ID_SEQUENCE  
MINVALUE 1 
MAXVALUE 999999999999999999999999999  
INCREMENT BY 1 
START WITH 7 
CACHE 10  
ORDER  
NOCYCLE;

/**
 * File 2 Sequences
 */
CREATE SEQUENCE FS_FILE_ID_SEQUENCE  
MINVALUE 1 
MAXVALUE 999999999999999999999999999  
INCREMENT BY 1 
START WITH 1 
CACHE 10  
ORDER  
NOCYCLE;

CREATE SEQUENCE FS_STORE_ID_SEQUENCE  
MINVALUE 1 
MAXVALUE 999999999999999999999999999  
INCREMENT BY 1 
START WITH 1 
CACHE 10  
ORDER  
NOCYCLE;

/**
 * CMS Sequences
 */
CREATE SEQUENCE FS_CMS_SITE_ID_SEQUENCE  
MINVALUE 1 
MAXVALUE 999999999999999999999999999  
INCREMENT BY 1 
START WITH 1 
CACHE 10  
ORDER  
NOCYCLE;

/**
 * Default data
 */
INSERT INTO FS_USER (USER_ID, USERNAME, PASSWORD, FIRST_NAME, MIDDLE_NAME, LAST_NAME, PRIMARY_EMAIL) VALUES (1, 'admin', 'admin', 'admin_first', 'admin_middle', 'admin_last', 'admin@your.domain.com');

/* Role codes MUST start with 'ROLE_' to be compatible with spring security */
INSERT INTO FS_USER_ROLE (ROLE_ID, ROLE_CODE, ROLE_DESC) VALUES (1, 'ROLE_ADMINISTRATOR', 'Administrators have access to everything');
INSERT INTO FS_USER_ROLE (ROLE_ID, ROLE_CODE, ROLE_DESC) VALUES (2, 'ROLE_FILE_MANAGER_ADMINISTRATOR', 'Administrative access to file manager section');
INSERT INTO FS_USER_ROLE (ROLE_ID, ROLE_CODE, ROLE_DESC) VALUES (3, 'ROLE_CMS_WORKPLACE_ADMINISTRATOR', 'Administrative access to CMS workplace section');
INSERT INTO FS_USER_ROLE (ROLE_ID, ROLE_CODE, ROLE_DESC) VALUES (4, 'ROLE_FILE_MANAGER_USER', 'Access to the file manager section');
INSERT INTO FS_USER_ROLE (ROLE_ID, ROLE_CODE, ROLE_DESC) VALUES (5, 'ROLE_CMS_WORKPLACE_USER', 'Access to the CMS workplace section');
INSERT INTO FS_USER_ROLE (ROLE_ID, ROLE_CODE, ROLE_DESC) VALUES (6, 'ROLE_GUEST', 'Default role for users not logged into the system');

INSERT INTO FS_USER_ROLE_LINK (USER_ID, ROLE_ID) VALUES (1, 1);
